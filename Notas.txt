***NOTAS***

=========================================================

#1
Uma UCClass não tem horário "total", apenas tem um bloco (aka slot) definida.
O que teria hórarios seria a turma "geral" (ex: 1LEIC01, que pertence a várias UCs).
A lista de lectures na UCClass não faz sentido existir, pelo menos da maneira como temos
a classe implementada.


#2
Temos que descobrir o método para comparar elementos no set.
Até agora vi o set.find(value), mas parece que para isso temos de dar overload aos comparadores,
para poderem comparar students.
Suggestions are welcome.


#3
Student não devia ter uma lista de UCClass onde estava inscrito?
Assim ficaria mais fácil criar o horário individual.


#4
Criar class Interface para escrever no terminal, e utilizador interagir com.


#5
função engraçada para listar conteudo de um diretório.
Talvez útil para a interface? Para o utilizador verificar os ficheiros que vai usar, etc
/*
#include <filesystem>
namespace fs = std::filesystem;

int main()
{
    std::string path = "/path/to/directory";
    for (const auto & entry : fs::directory_iterator(path))
        std::cout << entry.path() << std::endl;
}
*/

#6
metodo sergio
-função generica ler ficheiros
    token
    getline
    guardar tokens num vetor de vetores
-funções específicas para distribuir esses tipos de dados
    mudar as variáveis
